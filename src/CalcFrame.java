
import javax.swing.JPanel;
import java.awt.Font;
import javax.swing.JOptionPane;
import java.math.RoundingMode;
import java.math.*;
import java.text.DecimalFormat;
import java.lang.*;
import java.math.BigInteger;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 91030283
 */

public class CalcFrame extends javax.swing.JFrame {

    CalculatorOperations CalcOperationClass = new CalculatorOperations();
    
    //////////////////////////////////
    //calculator behavoiur variables
    public String inputString ="";
    public String inputString2 ="";
    public String stringBeforeOperator ="";
    public String stringAfterOperator ="";
    public String operator ="";
    
    public String stringOutputAnswer ="";
    public double doubleBeforeConversion ;
    public double doubleOutputAnswer;
    public double doubleAfterOperator;
    public double doubleBeforeOperator;
    public double doubleInput; 
    
    public static final double  PI =3.14;
    public static final  double E =2.718281828459045;
    
    boolean isPower;

    //////////////////////////////////
    //rounding variables
    String StringRoundedAnswer;
    double doubleInputNumber;
    int    intRoundingNumber ;
    
    /**
     * Creates new form CalcFrame
     */
    public CalcFrame() {
        initComponents();
        
        //setting components when frame is loaded,visibility and size
        this.setVisible(true);
        this.panBasic.setVisible(true);
        this.setSize(350,450);
        this.setLocation(0,0);
        panExtended.setVisible(false);
        this.panBasic.setLocation(0, 0);
        //extended calculator
        //extendedPanel.setVisible(false);
        CalculatorOperations CalcOperationClass = new CalculatorOperations();
        
        
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupView = new javax.swing.ButtonGroup();
        btnGroupFont = new javax.swing.ButtonGroup();
        btnGroupRound = new javax.swing.ButtonGroup();
        radioGroupDegreesRadians = new javax.swing.ButtonGroup();
        panBasic = new javax.swing.JPanel();
        btn1 = new javax.swing.JButton();
        btnMultiply = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btAdd = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btnInverse = new javax.swing.JButton();
        btnSub = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btnFactorial = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btnAddSub = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btnDecimal = new javax.swing.JButton();
        btnDivision = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();
        btnEquals = new javax.swing.JButton();
        btnXY = new javax.swing.JButton();
        txtInput = new javax.swing.JTextField();
        btnCA = new javax.swing.JButton();
        btnCE = new javax.swing.JButton();
        panExtended = new javax.swing.JPanel();
        radioDegrees = new javax.swing.JRadioButton();
        radioRadians = new javax.swing.JRadioButton();
        btnSin = new javax.swing.JButton();
        btnAsin = new javax.swing.JButton();
        btnCos = new javax.swing.JButton();
        btnTan = new javax.swing.JButton();
        btnPI = new javax.swing.JButton();
        btnAcos = new javax.swing.JButton();
        btnAtan = new javax.swing.JButton();
        btnE = new javax.swing.JButton();
        InformationOptionPane = new javax.swing.JOptionPane();
        mnuBar = new javax.swing.JMenuBar();
        mnuView = new javax.swing.JMenu();
        radioBasic = new javax.swing.JRadioButtonMenuItem();
        radioExtended = new javax.swing.JRadioButtonMenuItem();
        mnuFont = new javax.swing.JMenu();
        radioPlain = new javax.swing.JRadioButtonMenuItem();
        radioBold = new javax.swing.JRadioButtonMenuItem();
        mnuRound = new javax.swing.JMenu();
        radioRound0 = new javax.swing.JRadioButtonMenuItem();
        radioRound1 = new javax.swing.JRadioButtonMenuItem();
        radioRound2 = new javax.swing.JRadioButtonMenuItem();
        radioRound3 = new javax.swing.JRadioButtonMenuItem();
        radioRound4 = new javax.swing.JRadioButtonMenuItem();
        radioRound5 = new javax.swing.JRadioButtonMenuItem();
        radioRound6 = new javax.swing.JRadioButtonMenuItem();
        radioRound7 = new javax.swing.JRadioButtonMenuItem();
        radioRound8 = new javax.swing.JRadioButtonMenuItem();
        radioRound9 = new javax.swing.JRadioButtonMenuItem();
        mnuHelp = new javax.swing.JMenu();
        mnuItemAbout = new javax.swing.JMenuItem();
        mnuItemHotKeys = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btn1.setText("1");
        btn1.setToolTipText("");
        btn1.setName("btn1"); // NOI18N
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btnMultiply.setText("*");
        btnMultiply.setToolTipText("");
        btnMultiply.setName("btn1"); // NOI18N
        btnMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiplyActionPerformed(evt);
            }
        });

        btn3.setText("3");
        btn3.setToolTipText("");
        btn3.setName("btn1"); // NOI18N
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn7.setText("7");
        btn7.setToolTipText("");
        btn7.setName("btn1"); // NOI18N
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setText("8");
        btn8.setToolTipText("");
        btn8.setName("btn1"); // NOI18N
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setText("9");
        btn9.setToolTipText("");
        btn9.setName("btn1"); // NOI18N
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btAdd.setText("+");
        btAdd.setToolTipText("");
        btAdd.setName("btn1"); // NOI18N
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btn2.setToolTipText("");
        btn2.setLabel("2");
        btn2.setName("btn1"); // NOI18N
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btnInverse.setText("1/x");
        btnInverse.setToolTipText("");
        btnInverse.setName("btn1"); // NOI18N
        btnInverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInverseActionPerformed(evt);
            }
        });

        btnSub.setText("-");
        btnSub.setToolTipText("");
        btnSub.setName("btn1"); // NOI18N
        btnSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubActionPerformed(evt);
            }
        });

        btn4.setText("4");
        btn4.setToolTipText("");
        btn4.setName("btn1"); // NOI18N
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btnFactorial.setText("x!");
        btnFactorial.setToolTipText("");
        btnFactorial.setName("btn1"); // NOI18N
        btnFactorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFactorialActionPerformed(evt);
            }
        });

        btn5.setText("5");
        btn5.setToolTipText("");
        btn5.setName("btn1"); // NOI18N
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btnAddSub.setText("+/-");
        btnAddSub.setToolTipText("");
        btnAddSub.setName("btn1"); // NOI18N
        btnAddSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSubActionPerformed(evt);
            }
        });

        btn6.setText("6");
        btn6.setToolTipText("");
        btn6.setName("btn1"); // NOI18N
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btnDecimal.setText(".");
        btnDecimal.setToolTipText("");
        btnDecimal.setName("btn1"); // NOI18N
        btnDecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecimalActionPerformed(evt);
            }
        });

        btnDivision.setText("/");
        btnDivision.setToolTipText("");
        btnDivision.setName("btn1"); // NOI18N
        btnDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivisionActionPerformed(evt);
            }
        });

        btn0.setText("0");
        btn0.setToolTipText("");
        btn0.setName("btn1"); // NOI18N
        btn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0ActionPerformed(evt);
            }
        });

        btnEquals.setText("=");
        btnEquals.setToolTipText("");
        btnEquals.setName("btn1"); // NOI18N
        btnEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEqualsActionPerformed(evt);
            }
        });

        btnXY.setText("x^y");
        btnXY.setToolTipText("");
        btnXY.setName("btn1"); // NOI18N
        btnXY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXYActionPerformed(evt);
            }
        });

        txtInput.setName("txtInput"); // NOI18N
        txtInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInputActionPerformed(evt);
            }
        });
        txtInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtInputFocusLost(evt);
            }
        });

        btnCA.setText("CA");
        btnCA.setToolTipText("");
        btnCA.setName("btn1"); // NOI18N
        btnCA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCAActionPerformed(evt);
            }
        });

        btnCE.setText("CE");
        btnCE.setToolTipText("");
        btnCE.setName("btn1"); // NOI18N
        btnCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panBasicLayout = new javax.swing.GroupLayout(panBasic);
        panBasic.setLayout(panBasicLayout);
        panBasicLayout.setHorizontalGroup(
            panBasicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panBasicLayout.createSequentialGroup()
                .addGroup(panBasicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panBasicLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panBasicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panBasicLayout.createSequentialGroup()
                                .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDecimal, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEquals, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSub, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnFactorial, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panBasicLayout.createSequentialGroup()
                                .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAddSub, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panBasicLayout.createSequentialGroup()
                                .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnInverse, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panBasicLayout.createSequentialGroup()
                                .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnXY, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panBasicLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnCA, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(btnCE, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panBasicLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(279, 279, 279))
        );
        panBasicLayout.setVerticalGroup(
            panBasicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panBasicLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(panBasicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnInverse, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panBasicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(panBasicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXY, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panBasicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddSub, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panBasicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFactorial, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDecimal, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEquals, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSub, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(panBasicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCA, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCE, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        radioGroupDegreesRadians.add(radioDegrees);
        radioDegrees.setSelected(true);
        radioDegrees.setText("Degrees");
        radioDegrees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDegreesActionPerformed(evt);
            }
        });

        radioGroupDegreesRadians.add(radioRadians);
        radioRadians.setText("Radians");

        btnSin.setText("Sin");
        btnSin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSinActionPerformed(evt);
            }
        });

        btnAsin.setText("asin");
        btnAsin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsinActionPerformed(evt);
            }
        });

        btnCos.setText("Cos");
        btnCos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCosActionPerformed(evt);
            }
        });

        btnTan.setText("tan");
        btnTan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTanActionPerformed(evt);
            }
        });

        btnPI.setText("PI");
        btnPI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPIActionPerformed(evt);
            }
        });

        btnAcos.setText("acos");
        btnAcos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcosActionPerformed(evt);
            }
        });

        btnAtan.setText("atan");
        btnAtan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtanActionPerformed(evt);
            }
        });

        btnE.setText("E");
        btnE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panExtendedLayout = new javax.swing.GroupLayout(panExtended);
        panExtended.setLayout(panExtendedLayout);
        panExtendedLayout.setHorizontalGroup(
            panExtendedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panExtendedLayout.createSequentialGroup()
                .addGroup(panExtendedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panExtendedLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(panExtendedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnPI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCos, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(btnTan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panExtendedLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(radioDegrees, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(panExtendedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panExtendedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panExtendedLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(panExtendedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnAtan)
                                .addComponent(btnAcos)
                                .addComponent(btnAsin, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(btnE, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panExtendedLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(radioRadians)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        panExtendedLayout.setVerticalGroup(
            panExtendedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panExtendedLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panExtendedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioDegrees)
                    .addComponent(radioRadians))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panExtendedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSin)
                    .addComponent(btnAsin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(43, 43, 43)
                .addGroup(panExtendedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCos)
                    .addComponent(btnAcos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(38, 38, 38)
                .addGroup(panExtendedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTan)
                    .addComponent(btnAtan))
                .addGap(38, 38, 38)
                .addGroup(panExtendedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPI)
                    .addComponent(btnE))
                .addGap(93, 93, 93))
        );

        mnuView.setText("View");

        radioBasic.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, 0));
        btnGroupView.add(radioBasic);
        radioBasic.setSelected(true);
        radioBasic.setText("Basic");
        radioBasic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBasicActionPerformed(evt);
            }
        });
        mnuView.add(radioBasic);

        radioExtended.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, 0));
        btnGroupView.add(radioExtended);
        radioExtended.setText("Extended");
        radioExtended.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioExtendedActionPerformed(evt);
            }
        });
        mnuView.add(radioExtended);

        mnuBar.add(mnuView);

        mnuFont.setText("Font");

        radioPlain.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        btnGroupFont.add(radioPlain);
        radioPlain.setSelected(true);
        radioPlain.setText("Plain");
        radioPlain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioPlainActionPerformed(evt);
            }
        });
        mnuFont.add(radioPlain);

        radioBold.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        btnGroupFont.add(radioBold);
        radioBold.setText("Bold");
        mnuFont.add(radioBold);

        mnuBar.add(mnuFont);

        mnuRound.setText("Round");

        btnGroupRound.add(radioRound0);
        radioRound0.setText("0");
        radioRound0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRound0ActionPerformed(evt);
            }
        });
        mnuRound.add(radioRound0);

        btnGroupRound.add(radioRound1);
        radioRound1.setText("1");
        radioRound1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRound1ActionPerformed(evt);
            }
        });
        mnuRound.add(radioRound1);

        btnGroupRound.add(radioRound2);
        radioRound2.setText("2");
        radioRound2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRound2ActionPerformed(evt);
            }
        });
        mnuRound.add(radioRound2);

        btnGroupRound.add(radioRound3);
        radioRound3.setText("3");
        radioRound3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRound3ActionPerformed(evt);
            }
        });
        mnuRound.add(radioRound3);

        btnGroupRound.add(radioRound4);
        radioRound4.setText("4");
        radioRound4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRound4ActionPerformed(evt);
            }
        });
        mnuRound.add(radioRound4);

        btnGroupRound.add(radioRound5);
        radioRound5.setText("5");
        radioRound5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRound5ActionPerformed(evt);
            }
        });
        mnuRound.add(radioRound5);

        btnGroupRound.add(radioRound6);
        radioRound6.setText("6");
        radioRound6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRound6ActionPerformed(evt);
            }
        });
        mnuRound.add(radioRound6);

        btnGroupRound.add(radioRound7);
        radioRound7.setText("7");
        radioRound7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRound7ActionPerformed(evt);
            }
        });
        mnuRound.add(radioRound7);

        btnGroupRound.add(radioRound8);
        radioRound8.setText("8");
        radioRound8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRound8ActionPerformed(evt);
            }
        });
        mnuRound.add(radioRound8);

        btnGroupRound.add(radioRound9);
        radioRound9.setSelected(true);
        radioRound9.setText("9");
        radioRound9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRound9ActionPerformed(evt);
            }
        });
        mnuRound.add(radioRound9);

        mnuBar.add(mnuRound);

        mnuHelp.setText("Help");

        mnuItemAbout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, 0));
        mnuItemAbout.setText("About");
        mnuItemAbout.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                mnuItemAboutStateChanged(evt);
            }
        });
        mnuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemAboutActionPerformed(evt);
            }
        });
        mnuHelp.add(mnuItemAbout);

        mnuItemHotKeys.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, 0));
        mnuItemHotKeys.setText("Hot Keys");
        mnuItemHotKeys.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemHotKeysActionPerformed(evt);
            }
        });
        mnuHelp.add(mnuItemHotKeys);

        mnuBar.add(mnuHelp);

        setJMenuBar(mnuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panBasic, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panExtended, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(InformationOptionPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(135, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panBasic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panExtended, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InformationOptionPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    //button 1 event handler
    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed

        
         if (isEmptyOperator(operator))
        {    
        stringBeforeOperator += "1";
        txtOutput(stringBeforeOperator);
        
        }
        else 
        {
        stringAfterOperator  += "1";
        txtOutput(stringAfterOperator);
    
        }
         
      
        
        // TODO add your handling code here:
    }//GEN-LAST:event_btn1ActionPerformed

    
    ///////////////////////////////////////////////////////////////////////////////
    //Basic radio button event handler
    
    private void radioBasicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBasicActionPerformed

     //Basic Calculator panel is visible
        
        //frame settings
        this.setLocation(0,0);
        this.setSize(350,450);
        
        //panel settings
        panBasic.setVisible(true);
        panExtended.setVisible(false);
        panBasic.setLocation(0, 0);
        
        
    }//GEN-LAST:event_radioBasicActionPerformed

    
    //////////////////////////////////////////////////////////////////////////////
    //Round menu item event handler
    private void radioRound2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRound2ActionPerformed
        
        int intRoundingNumber = 2;
        doubleInputNumber= Double.parseDouble(txtInput.getText());
        StringRoundedAnswer = CalcOperationClass.roundNumberEntered(doubleInputNumber ,intRoundingNumber);
        
        //display output
        txtInput.setText(StringRoundedAnswer);

    }//GEN-LAST:event_radioRound2ActionPerformed

    
    //button number 2 event handler
    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
         
        if (isEmptyOperator(operator))
        {    
        stringBeforeOperator += "2";
        txtOutput(stringBeforeOperator);
        doubleBeforeOperator = Double.parseDouble(stringBeforeOperator);
        }
        else 
        {
        stringAfterOperator  += "2";
        txtOutput(stringAfterOperator);
        doubleAfterOperator =Double.parseDouble(stringAfterOperator);
        }
        

    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        
        
       if (isEmptyOperator(operator))
        {    
        stringBeforeOperator += "3";
        txtOutput(stringBeforeOperator);
        
        }
        else 
        {
        stringAfterOperator  += "3";
        txtOutput(stringAfterOperator);
        
        }
        
        
        
        
    }//GEN-LAST:event_btn3ActionPerformed

    private void btnMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiplyActionPerformed
       
      
        if (isEmptyOperator(operator))
        {    
            //first oprator entered
            operator = "*";
            txtOutput(operator);
            
        }
        else 
        {
            //second operator entered or more
            stringOutputAnswer = calculateMultipleOperators();
            txtOutput(stringOutputAnswer);
                    
        }
        //stringOutputAnswer="";
       
    }//GEN-LAST:event_btnMultiplyActionPerformed

    private void btnXYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXYActionPerformed

        isPower = true;
        //resetting variables
        stringBeforeOperator="";
        stringAfterOperator="";
        operator="powered";
        stringBeforeOperator = txtInput.getText();
        txtOutput(stringBeforeOperator);
        
    }//GEN-LAST:event_btnXYActionPerformed

    ////////////////////////////////////////////////////////////////
    //power method
//    public String powerMethod(int baseNum,int powerNum)
//    {
//        
//    }
    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        if (isEmptyOperator(operator))
        {    
        stringBeforeOperator += "4";
        txtOutput(stringBeforeOperator);
       
        }
        else 
        {
        stringAfterOperator  += "4";
        txtOutput(stringAfterOperator);
       
        }
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        if (isEmptyOperator(operator))
        {    
        stringBeforeOperator += "5";
        txtOutput(stringBeforeOperator);
        
        }
        else 
        {
        stringAfterOperator  += "5";
        txtOutput(stringAfterOperator);
        
        }
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        if (isEmptyOperator(operator))
        {    
        stringBeforeOperator += "6";
        txtOutput(stringBeforeOperator);
       
        }
        else 
        {
           
        stringAfterOperator  += "6";
        txtOutput(stringAfterOperator);
        
//         public String stringOutputAnswer ="";
//    public double doubleOutputAnswer;
//    public double doubleAfterOperator;
//    public double doubleBeforeOperator;
        
        }
    }//GEN-LAST:event_btn6ActionPerformed

    private void btnDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivisionActionPerformed

        
        if (isEmptyOperator(operator))
        {    
            //first oprator entered
            operator = "/";
            txtOutput(operator);
            
        }
        else 
        {
            //second operator entered or more
            stringOutputAnswer = calculateMultipleOperators();
            txtOutput(stringOutputAnswer);
            
            //Math.sin
        }
    
    }//GEN-LAST:event_btnDivisionActionPerformed

    //inverse btn method
    private void btnInverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInverseActionPerformed

        doubleInput= Double.parseDouble(txtInput.getText());
        doubleOutputAnswer = (1/doubleInput);
        stringOutputAnswer =String.valueOf(doubleOutputAnswer);
        txtOutput(stringOutputAnswer);
          

    }//GEN-LAST:event_btnInverseActionPerformed

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
       
        
        
        if (isEmptyOperator(operator))
        {    
            //first oprator entered
            operator= "";
            operator = "+";
            txtOutput(operator);
            
            
        }
        else 
        {
            //second operator entered or more
            stringOutputAnswer = calculateMultipleOperators();
            txtOutput(stringOutputAnswer);
                    
        }
        
    }//GEN-LAST:event_btAddActionPerformed
//////////////////////////////////////////////////////////////////////
    //multuple operators pressed
    public String calculateMultipleOperators()
            {
                 //second operator entered or more
                 stringOutputAnswer   = CalcOperationClass.operatorMethod(operator,stringBeforeOperator,stringAfterOperator);
                 stringBeforeOperator = "";
                 stringBeforeOperator = stringOutputAnswer;
                 stringAfterOperator= "";
                 
                 return stringOutputAnswer;
            }
   // stringOutputAnswer = String.valueOf(doubleOutputAnswer);
       // return stringOutputAnswer;
    //////////////////////////////////////////////////////////////////
    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
       if (isEmptyOperator(operator))
        {    
            stringBeforeOperator += "9";
            txtOutput(stringBeforeOperator);

        }
        else 
        {
            stringAfterOperator  += "9";
            txtOutput(stringAfterOperator);
       
        }
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
      if (isEmptyOperator(operator))
        {    
        stringBeforeOperator += "8";
        txtOutput(stringBeforeOperator);
       
        }
        else 
        {
        stringAfterOperator  += "8";
        txtOutput(stringAfterOperator);
       
        }
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        if (isEmptyOperator(operator))
        {    
        stringBeforeOperator += "7";
        txtOutput(stringBeforeOperator);
        
        }
        else 
        {
        stringAfterOperator  += "7";
        txtOutput(stringAfterOperator);
       
        }
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0ActionPerformed
       if (isEmptyOperator(operator))
        {    
        stringBeforeOperator += "0";
        txtOutput(stringBeforeOperator);
        
        }
        else 
        {
        stringAfterOperator  += "0";
        txtOutput(stringAfterOperator);
        
        }
       
       
    }//GEN-LAST:event_btn0ActionPerformed

    
    /////////////////////////////////////////////////////////////////////////
    //method checking opertor empty or not
    public boolean isEmptyOperator(String operator)
    {
        boolean boolIsEmpty =true;
        if (operator.isEmpty())
        {    
            //first operator entered
               boolIsEmpty = true;
               
        }
        else 
        {
            //second/more operator pressed
               boolIsEmpty=false;
               

        }
        
        return boolIsEmpty;
    }
    
    
    ////////////////////////////////////////////////////////////////////////
    //output textbox method
    
    public void txtOutput(String stringOutputAnswer)
    {
        
        txtInput.setText(stringOutputAnswer);
        
    }
    //////////////////////////////////////////////////////////////////////////
    private void btnEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEqualsActionPerformed

        
        if (isPower)
        {
            
            doubleBeforeOperator = Double.parseDouble(stringBeforeOperator);
            stringAfterOperator = txtInput.getText();
            doubleAfterOperator = Double.parseDouble(stringAfterOperator);
            doubleOutputAnswer = Math.pow(doubleBeforeOperator,doubleAfterOperator);
            stringOutputAnswer =String.valueOf(doubleOutputAnswer);
            txtOutput(stringOutputAnswer);
                    
        }
        else if (((stringBeforeOperator).equals("") )  || ((stringAfterOperator).equals("")))
            {    
            
                throw new NumberFormatException();
            }
         else
            {
              calculateEqual();
            
            }
        //resetAll();
///////////////////////////////////////////////////////////////////////////////////////////////////////
    }//GEN-LAST:event_btnEqualsActionPerformed
  //////////////////////////////////////////////////////////////////////////////////////
    //calculateEqual method
    public void calculateEqual()
            
    {
        
        stringOutputAnswer = CalcOperationClass.operatorMethod(operator,stringBeforeOperator,stringAfterOperator);
        txtOutput(stringOutputAnswer);
        resetAll();
        
    }  
     /////////////////////////////////////////////////////////////////////////////////
    
    private void btnAddSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSubActionPerformed
        inputString = txtInput.getText();
        if (inputString.contains("-"))
        {
            //remove negative sign
            stringOutputAnswer= inputString.replace("-", " ");
            txtOutput(stringOutputAnswer);
        }
        else
        {
            //add negative sign
            stringOutputAnswer = "-" + inputString;
            txtOutput(stringOutputAnswer);
        }
        
    }//GEN-LAST:event_btnAddSubActionPerformed

    private void btnDecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecimalActionPerformed
        stringBeforeOperator = txtInput.getText();
        operator = "Decimal";
        
     
    try{    
        if (stringBeforeOperator.contains("."))
        {
            throw new NumberFormatException();
            
        }
        else
        {
            //txtOutput(inputString);
            stringAfterOperator = stringBeforeOperator + ".";
            txtOutput(stringAfterOperator);
        }//else
        //resetAll();
        
    }
    catch (NumberFormatException nfe)
    {
                InformationOptionPane.showMessageDialog(this, "2 or more decimal points was entered!", "Only One Decimal Point Error",JOptionPane.ERROR_MESSAGE);
    }        
        
        
        
        
    }//GEN-LAST:event_btnDecimalActionPerformed

    private void btnSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubActionPerformed

        if (isEmptyOperator(operator))
        {    
            //first operator entered
            operator = "-";
            txtOutput(operator);
            
        }
        else 
        {
            //second operator entered or more
            //stringOutputAnswer=
            stringOutputAnswer = calculateMultipleOperators();
            txtOutput(stringOutputAnswer);
                    
        }
        
        
        
       
    }//GEN-LAST:event_btnSubActionPerformed

    private void btnFactorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFactorialActionPerformed

        


    }//GEN-LAST:event_btnFactorialActionPerformed
    
/////////////////////////////////////////////////////////////////////
    //resetting methods  CE event handler
    private void btnCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCEActionPerformed

        resetTxtInput();

    }//GEN-LAST:event_btnCEActionPerformed
   
    //reset ,CE 
    public void resetTxtInput()
    {
        txtInput.setText("");
        txtInput.requestFocus();
    }
    /////////////////////////////////////////////////////////////////////
    //resetting methods  CA event handler
    private void btnCAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCAActionPerformed
       
        resetTxtInput();
        resetAll();
    }//GEN-LAST:event_btnCAActionPerformed
    /////////////////////////////////////////////////////////////////////
    //reset ,CA
    public void resetAll()
    {
    //////////////////////////////////
    //calculator behavoiur variables
        inputString ="";
        stringBeforeOperator ="";
        stringAfterOperator ="";
        operator ="";
        stringOutputAnswer ="";
        doubleAfterOperator = 0;
        doubleBeforeOperator = 0;
        doubleOutputAnswer = 0;
    //////////////////////////////////
    //rounding variables
        StringRoundedAnswer ="";
        doubleInputNumber = 0;
        intRoundingNumber = 0;
       
    }
        
    
    private void radioDegreesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDegreesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioDegreesActionPerformed

  /////////////////////////////////////////////////////////////////////////////  
    //extended calculator event handlers
    private void radioExtendedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioExtendedActionPerformed
        
        // both basic and extended calculators are visible
       
        this.setSize(500,450);
        panExtended.setVisible(true);
        
    }//GEN-LAST:event_radioExtendedActionPerformed

///////////////////////////////////////////////////////////////////////////////    
    //Font menu item for plain and bold radio buttons
    private void radioPlainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioPlainActionPerformed
        
        //setting plain font after retreiving current font's characteristics
        if(radioPlain.isSelected())
        {
        Font oldFont = txtInput.getFont();
        Font newFont = new Font(oldFont.getName(),Font.PLAIN,oldFont.getSize());
        changeFont(newFont);
        }
        
    }//GEN-LAST:event_radioPlainActionPerformed

      //////////////////////////////////////////////////////////////////////////////
    //method for changing font
    private void changeFont(Font font)
    {
        txtInput.setFont(font);
    }
    
    //////////////////////////////////////////////////////////////////////////////////
    //unused code
    private void mnuItemAboutStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_mnuItemAboutStateChanged
        
        
    }//GEN-LAST:event_mnuItemAboutStateChanged

    
    ///////////////////////////////////////////////////////////////////////////////
    //on About menu item event handler a Joption dialogue box appears.
    private void mnuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemAboutActionPerformed
        
        String aboutMessage = "Calculator" +"\n" + 
                "Creadted By: Sherine Balaha -CPP" +"\n" + 
                "15/06/2018";
        InformationOptionPane.showMessageDialog(this, aboutMessage, "About",JOptionPane.INFORMATION_MESSAGE);


    }//GEN-LAST:event_mnuItemAboutActionPerformed
    ////////////////////////////////////////////////////////////////////////////
    //on Hotkeys menu item eveny handler option pane appears
    private void mnuItemHotKeysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemHotKeysActionPerformed
        
        String hotKeysMessage = "A -About" +"\n"+ 
        "K -Hot Keys"+"\n"+
        "Ctrl + P -Plain Font"+"\n" + 
        "Ctrl + B -Bold Font"+"\n"+"B-Basic View"+"\n"+
        "E-Extended View"+"\n"+ "Alt+ P- PI" +"\n"+"Alt + E- E";
        InformationOptionPane.showMessageDialog(this, hotKeysMessage, "Hot Keys",JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_mnuItemHotKeysActionPerformed

    //////////////////////////////////////////////////////////////////////////////
    //Round menu item handling
    private void radioRound0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRound0ActionPerformed
        
        intRoundingNumber = 0;
        doubleInputNumber= Double.parseDouble(txtInput.getText());
        StringRoundedAnswer = CalcOperationClass.roundNumberEntered(doubleInputNumber ,intRoundingNumber);
        
        //display output
        txtOutput(StringRoundedAnswer);

    }//GEN-LAST:event_radioRound0ActionPerformed

    private void radioRound1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRound1ActionPerformed
        
       intRoundingNumber = 1;
       doubleInputNumber= Double.parseDouble(txtInput.getText());
       StringRoundedAnswer = CalcOperationClass.roundNumberEntered(doubleInputNumber ,intRoundingNumber);
        
       //display output
       txtOutput(StringRoundedAnswer);
        
        
    }//GEN-LAST:event_radioRound1ActionPerformed

    private void radioRound3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRound3ActionPerformed

        intRoundingNumber = 3;
        doubleInputNumber= Double.parseDouble(txtInput.getText());
        StringRoundedAnswer = CalcOperationClass.roundNumberEntered(doubleInputNumber ,intRoundingNumber);
        
        //display output
        txtOutput(StringRoundedAnswer);


    }//GEN-LAST:event_radioRound3ActionPerformed

    private void radioRound4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRound4ActionPerformed
        intRoundingNumber = 4;
        
        doubleInputNumber= Double.parseDouble(txtInput.getText());
        StringRoundedAnswer = CalcOperationClass.roundNumberEntered(doubleInputNumber ,intRoundingNumber);
        
        //display output
        txtOutput(StringRoundedAnswer);
        
    }//GEN-LAST:event_radioRound4ActionPerformed

    private void radioRound5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRound5ActionPerformed
        intRoundingNumber= 5;
        doubleInputNumber= Double.parseDouble(txtInput.getText());
        StringRoundedAnswer = CalcOperationClass.roundNumberEntered(doubleInputNumber ,intRoundingNumber);
        
        //display output
        txtOutput(StringRoundedAnswer);
        
    }//GEN-LAST:event_radioRound5ActionPerformed

    private void radioRound6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRound6ActionPerformed
        intRoundingNumber = 6;
        doubleInputNumber= Double.parseDouble(txtInput.getText());
        StringRoundedAnswer = CalcOperationClass.roundNumberEntered(doubleInputNumber ,intRoundingNumber);
        
        //display output
        txtInput.setText(StringRoundedAnswer);
    }//GEN-LAST:event_radioRound6ActionPerformed

    private void radioRound7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRound7ActionPerformed
        intRoundingNumber = 7;
        doubleInputNumber= Double.parseDouble(txtInput.getText());
        StringRoundedAnswer = CalcOperationClass.roundNumberEntered(doubleInputNumber ,intRoundingNumber);
        
        //display output
        txtInput.setText(StringRoundedAnswer);
    }//GEN-LAST:event_radioRound7ActionPerformed

    private void radioRound8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRound8ActionPerformed
        intRoundingNumber = 8;
        doubleInputNumber= Double.parseDouble(txtInput.getText());
        StringRoundedAnswer = CalcOperationClass.roundNumberEntered(doubleInputNumber ,intRoundingNumber);
        
        //display output
        txtInput.setText(StringRoundedAnswer);
    }//GEN-LAST:event_radioRound8ActionPerformed

    private void radioRound9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRound9ActionPerformed
        intRoundingNumber = 9;
        doubleInputNumber= Double.parseDouble(txtInput.getText());
        StringRoundedAnswer = CalcOperationClass.roundNumberEntered(doubleInputNumber ,intRoundingNumber);
        
        //display output
        txtInput.setText(StringRoundedAnswer);
    }//GEN-LAST:event_radioRound9ActionPerformed

    private void txtInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInputActionPerformed
        
        
        


    }//GEN-LAST:event_txtInputActionPerformed

    ///////////////////////////////////////////////////////////////////////////////////////////////////
    //validation on focus lost
    private void txtInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInputFocusLost
       
         //Exception handling for input data 
        inputChecker();
   
        
    }//GEN-LAST:event_txtInputFocusLost

    private void btnSinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSinActionPerformed
       
 //sin calculations after radian conversion
        doubleInput= Double.parseDouble(txtInput.getText());
        inputChecker();
        
        if (radioDegrees.isSelected())
        {
            //change selection radiobuttons
            //radioRadians.setSelected(true);
            //change value entered into radian
            doubleBeforeConversion = Math.toRadians(doubleInput);       
            
        }
               
        doubleOutputAnswer = Math.sin(doubleBeforeConversion);
        stringOutputAnswer = String.valueOf(doubleOutputAnswer);
        txtOutput(stringOutputAnswer);
        stringOutputAnswer="";
        
    }//GEN-LAST:event_btnSinActionPerformed

    private void btnCosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCosActionPerformed
         //cos calculations after radian conversion
            doubleInput= Double.parseDouble(txtInput.getText());
            inputChecker();
        
        if (radioDegrees.isSelected())
        {
            //change selection radiobuttons
            //radioRadians.isSelected();
            //change value entered into radian
            doubleBeforeConversion = Math.toRadians(doubleInput);         
            
        }
            
             
            doubleOutputAnswer = Math.cos(doubleBeforeConversion);
            stringOutputAnswer = String.valueOf(doubleOutputAnswer);
            txtOutput(stringOutputAnswer);
            stringOutputAnswer="";
    }//GEN-LAST:event_btnCosActionPerformed

    private void btnTanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTanActionPerformed
        
        doubleInput= Double.parseDouble(txtInput.getText());
        inputChecker();
        //tan calculations after radian conversion
        if (radioDegrees.isSelected())
        {
            //change selection radiobuttons
            //radioRadians.isSelected();
             //change value entered into radian
            doubleBeforeConversion = Math.toRadians(doubleInput);
        }
                     
            doubleOutputAnswer = Math.tan(doubleBeforeConversion);
            stringOutputAnswer = String.valueOf(doubleOutputAnswer);
            txtOutput(stringOutputAnswer);
            stringOutputAnswer="";
    }//GEN-LAST:event_btnTanActionPerformed

    private void btnAsinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsinActionPerformed
        //asin calculations after degrees conversion
        doubleInput= Double.parseDouble(txtInput.getText());
        inputChecker();
          //change value entered into degrees          
            doubleBeforeConversion = Math.asin(doubleInput);
        if (radioDegrees.isSelected())
        {
            //change selection radiobuttons
            //radioDegrees.setSelected(true);
            doubleOutputAnswer = Math.toDegrees(doubleBeforeConversion); 
        }
           
           
            stringOutputAnswer = String.valueOf(doubleOutputAnswer);
            txtOutput(stringOutputAnswer);
            stringOutputAnswer="";
    }//GEN-LAST:event_btnAsinActionPerformed

    private void btnAcosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcosActionPerformed
        //acos calculations after degrees conversion
        doubleInput= Double.parseDouble(txtInput.getText());
        inputChecker();
         //change value entered into degrees         
            doubleBeforeConversion = Math.acos(doubleInput);
        if (radioDegrees.isSelected())
        {
            //change selection radiobuttons
            //radioDegrees.setSelected(true);
            doubleOutputAnswer = Math.toDegrees(doubleBeforeConversion);
        }
             
             
            stringOutputAnswer = String.valueOf(doubleOutputAnswer);
            txtOutput(stringOutputAnswer);
            stringOutputAnswer="";
    }//GEN-LAST:event_btnAcosActionPerformed

    private void btnAtanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtanActionPerformed
        //atan calculations after degrees conversion
           doubleInput= Double.parseDouble(txtInput.getText());
        inputChecker();
         //change value entered into degrees          
            doubleBeforeConversion = Math.atan(doubleInput);
        if (radioDegrees.isSelected())
        {
            //change selection radiobuttons
            //radioDegrees.setSelected(true);
           doubleOutputAnswer = Math.toDegrees(doubleBeforeConversion);
        }
            
             
            stringOutputAnswer = String.valueOf(doubleOutputAnswer);
            txtOutput(stringOutputAnswer);
            stringOutputAnswer="";
    }//GEN-LAST:event_btnAtanActionPerformed

    private void btnPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPIActionPerformed
        
            stringOutputAnswer = String.valueOf(PI);
            txtOutput(stringOutputAnswer);
            stringOutputAnswer="";
    }//GEN-LAST:event_btnPIActionPerformed

    private void btnEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEActionPerformed
            stringOutputAnswer = String.valueOf(E);
            txtOutput(stringOutputAnswer);
            stringOutputAnswer="";
    }//GEN-LAST:event_btnEActionPerformed

    
 ////////////////////////////////////////////////////////////////////////////////
    //validation
     public void inputChecker()    
    {         
    try
    {
        
        inputString = txtInput.getText();
            if ((inputString == null) )
            {
                throw new NumberFormatException();
                
            }
           
        //division by zero
            else if (stringAfterOperator.equals("0"))
            {
                throw new ArithmeticException();
            }

            else
            {
              
              txtOutput(inputString);
        
         }//else
                  
    }//try
    
    //multiple points exception
    catch(NumberFormatException nfe)
    {
        if(nfe.getMessage().toString().equals("multiple points"))
        {
             InformationOptionPane.showMessageDialog(this, "2 or more decimal points was entered!", "Only One Decimal Point Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            InformationOptionPane.showMessageDialog(this, "Please enter number" , "Invalid input",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    //zero division catcher
    catch(ArithmeticException ae)
    {
        //division by zero
             InformationOptionPane.showMessageDialog(this, ae.getMessage(), "Division by zero Error",JOptionPane.ERROR_MESSAGE);
        
    }
    //general exception catcher
    catch(Exception e)
    {
        InformationOptionPane.showMessageDialog(this, e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
        
    }

}
            
  ///////////////////////////////////////////////////////////////////////////////////
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalcFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalcFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalcFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalcFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalcFrame().setVisible(true);
                
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JOptionPane InformationOptionPane;
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnAcos;
    private javax.swing.JButton btnAddSub;
    private javax.swing.JButton btnAsin;
    private javax.swing.JButton btnAtan;
    private javax.swing.JButton btnCA;
    private javax.swing.JButton btnCE;
    private javax.swing.JButton btnCos;
    private javax.swing.JButton btnDecimal;
    private javax.swing.JButton btnDivision;
    private javax.swing.JButton btnE;
    private javax.swing.JButton btnEquals;
    private javax.swing.JButton btnFactorial;
    private javax.swing.ButtonGroup btnGroupFont;
    private javax.swing.ButtonGroup btnGroupRound;
    private javax.swing.ButtonGroup btnGroupView;
    private javax.swing.JButton btnInverse;
    private javax.swing.JButton btnMultiply;
    private javax.swing.JButton btnPI;
    private javax.swing.JButton btnSin;
    private javax.swing.JButton btnSub;
    private javax.swing.JButton btnTan;
    private javax.swing.JButton btnXY;
    private javax.swing.JMenuBar mnuBar;
    private javax.swing.JMenu mnuFont;
    private javax.swing.JMenu mnuHelp;
    private javax.swing.JMenuItem mnuItemAbout;
    private javax.swing.JMenuItem mnuItemHotKeys;
    private javax.swing.JMenu mnuRound;
    private javax.swing.JMenu mnuView;
    private javax.swing.JPanel panBasic;
    private javax.swing.JPanel panExtended;
    private javax.swing.JRadioButtonMenuItem radioBasic;
    private javax.swing.JRadioButtonMenuItem radioBold;
    private javax.swing.JRadioButton radioDegrees;
    private javax.swing.JRadioButtonMenuItem radioExtended;
    private javax.swing.ButtonGroup radioGroupDegreesRadians;
    private javax.swing.JRadioButtonMenuItem radioPlain;
    private javax.swing.JRadioButton radioRadians;
    private javax.swing.JRadioButtonMenuItem radioRound0;
    private javax.swing.JRadioButtonMenuItem radioRound1;
    private javax.swing.JRadioButtonMenuItem radioRound2;
    private javax.swing.JRadioButtonMenuItem radioRound3;
    private javax.swing.JRadioButtonMenuItem radioRound4;
    private javax.swing.JRadioButtonMenuItem radioRound5;
    private javax.swing.JRadioButtonMenuItem radioRound6;
    private javax.swing.JRadioButtonMenuItem radioRound7;
    private javax.swing.JRadioButtonMenuItem radioRound8;
    private javax.swing.JRadioButtonMenuItem radioRound9;
    private javax.swing.JTextField txtInput;
    // End of variables declaration//GEN-END:variables
}
